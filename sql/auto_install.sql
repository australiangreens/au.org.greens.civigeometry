-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the existing tables - this section generated from drop.tpl
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civigeometry_geometry_overlap_cache`;
DROP TABLE IF EXISTS `civigeometry_geometry_entity`;
DROP TABLE IF EXISTS `civigeometry_geometry_collection_geometry`;
DROP TABLE IF EXISTS `civigeometry_geometry_collection`;
DROP TABLE IF EXISTS `civigeometry_geometry`;
DROP TABLE IF EXISTS `civigeometry_geometry_type`;
DROP TABLE IF EXISTS `civigeometry_geometry_collection_type`;

SET FOREIGN_KEY_CHECKS=1;

-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civigeometry_geometry_collection_type
-- *
-- * Geometry collection types
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_collection_type` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique GeometryCollectionType ID',
  `label` varchar(255) NOT NULL COMMENT 'Title of the Geometry Collection Type',
  `description` varchar(255) DEFAULT NULL COMMENT 'Title of the Geometry Collection Type',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UI_label`(label))
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry_type
-- *
-- * Geometry Types
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_type` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique GeometryType ID',
  `label` varchar(255) NOT NULL COMMENT 'The title of the Geometry Type',
  `description` varchar(255) DEFAULT true COMMENT 'The description of the Geometry Type',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_label`(label))
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry
-- *
-- * Geometries
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique Geometry ID',
  `geometry_type_id` int unsigned COMMENT 'Geometry Type of this geometry type',
  `label` varchar(255) NOT NULL COMMENT 'The Title of this geometry',
  `description` varchar(255) DEFAULT NULL COMMENT 'The description of this geometry',
  `is_archived` tinyint DEFAULT 0 COMMENT 'Is this geometry archived?',
  `archived_date` timestamp NULL DEFAULT NULL COMMENT 'The Title of this geometry',
  `geometry` geometry NOT NULL COMMENT 'The Spatial data for this geometry',
  PRIMARY KEY (`id`),
  INDEX `index_is_archived_geometry_type_label`(is_archived, geometry_type_id, label),
  CONSTRAINT FK_civigeometry_geometry_geometry_type_id FOREIGN KEY (`geometry_type_id`) REFERENCES `civigeometry_geometry_type`(`id`) ON DELETE CASCADE)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry_collection
-- *
-- * Details on a collection of Geometries
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_collection` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique GeometryCollection ID',
  `geometry_collection_type_id` int unsigned NOT NULL COMMENT 'FK to civigeomety_geometry_collection_type',
  `label` varchar(255) NOT NULL COMMENT 'Title of the Geometry Collection',
  `description` varchar(255) DEFAULT NULL COMMENT 'Description of the Geometry Collection',
  `source` varchar(255) DEFAULT NULL COMMENT 'Source of the Geometry Collection',
  `is_archived` tinyint DEFAULT 0 COMMENT 'Is this Geometry Collection archived',
  `archived_date` timestamp NULL DEFAULT NULL COMMENT 'When was this Geometry Collection archived',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_type_id_label`(geometry_collection_type_id, label),
  CONSTRAINT FK_civigeometry_geometry_collection_geometry_collection_type_id FOREIGN KEY (`geometry_collection_type_id`) REFERENCES `civigeometry_geometry_collection_type`(`id`) ON DELETE CASCADE)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry_collection_geometry
-- *
-- * Linkage between Geometries and their collections
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_collection_geometry` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique Geometry ID',
  `geometry_id` int unsigned COMMENT 'Geometry',
  `collection_id` int unsigned COMMENT 'Geometry Collection',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_collection_id_geometry_id`(collection_id, geometry_id),
  CONSTRAINT FK_civigeometry_geometry_collection_geometry_geometry_id FOREIGN KEY (`geometry_id`) REFERENCES `civigeometry_geometry`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_civigeometry_geometry_collection_geometry_collection_id FOREIGN KEY (`collection_id`) REFERENCES `civigeometry_geometry_collection`(`id`) ON DELETE CASCADE)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry_entity
-- *
-- * Holds a static cache of geometry ids an address is within
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_entity` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique GeometryEntity ID',
  `entity_id` int unsigned NOT NULL COMMENT 'entity id that is associated with this geometry',
  `entity_table` varchar(255) NOT NULL COMMENT 'entity table that is associated with this geometry',
  `geometry_id` int unsigned NOT NULL COMMENT 'FK to Geometry Table',
  `expiry_date` timestamp NULL DEFAULT NULL COMMENT 'When Should this geometry entity relationship expire',
  `reason` varchar(64) NULL DEFAULT NULL COMMENT 'The reason for the relationship between the geometry and entity',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_entity_table_geometry_id_entity_id`(entity_table, geometry_id, entity_id),
  INDEX `index_expiry_date`(expiry_date),
  INDEX `index_entity_table_entity_id`(entity_table, entity_id),
  CONSTRAINT FK_civigeometry_geometry_entity_geometry_id FOREIGN KEY (`geometry_id`) REFERENCES `civigeometry_geometry`(`id`) ON DELETE CASCADE)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civigeometry_geometry_overlap_cache
-- *
-- * Cache table containing overlaps between 2 geometries
-- *
-- *******************************************************/
CREATE TABLE `civigeometry_geometry_overlap_cache` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique Geometry ID',
  `geometry_id_a` int unsigned COMMENT 'Geometry',
  `geometry_id_b` int unsigned COMMENT 'Geometry',
  `overlap` int NOT NULL DEFAULT 0 COMMENT 'Overlap % that Geometry A is within Geometry B',
  `cache_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP() COMMENT 'When was this overlap last re-generated',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index_geometry_id_a_geometry_id_b`(geometry_id_a, geometry_id_b),
  CONSTRAINT FK_civigeometry_geometry_overlap_cache_geometry_id_a FOREIGN KEY (`geometry_id_a`) REFERENCES `civigeometry_geometry`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_civigeometry_geometry_overlap_cache_geometry_id_b FOREIGN KEY (`geometry_id_b`) REFERENCES `civigeometry_geometry`(`id`) ON DELETE CASCADE)
ENGINE=InnoDB;
